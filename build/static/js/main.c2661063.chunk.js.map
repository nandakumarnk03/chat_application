{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","bind","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","width","title","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDOM","render","document","getElementById"],"mappings":"qNA0DeA,EAtDK,SAACC,GACnB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAQVC,EAAe,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAOP,EAAMQ,OAEfD,EAAKE,OAAS,GAChBC,YAAYP,EAAOD,EAAQ,CAAEK,SAG/BN,EAAS,KAOX,OACE,uBAAMU,UAAU,eAAeC,SAAUR,EAAzC,UACA,uBACEO,UAAU,gBACVE,YAAY,oBACZb,MAAOA,EACPc,SA5BiB,SAACT,GACpBJ,EAASI,EAAMU,OAAOf,OAEtBgB,YAASlB,EAAOI,IA0BdU,SAAUR,IAEd,uBAAOa,QAAQ,gBAAf,SACM,sBAAMN,UAAU,eAAhB,SACE,cAACO,EAAA,EAAD,CAAiBP,UAAU,qBAG/B,uBACEQ,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHC,MAAO,CAAEC,QAAS,QAClBT,SAvBe,SAACT,GACpBK,YAAYP,EAAOD,EAAQ,CAAEsB,MAAOnB,EAAMU,OAAOS,MAAOjB,KAAM,MAsBnCkB,K,aAEzB,wBAAQN,KAAK,SAASR,UAAU,cAAhC,SACE,cAACe,EAAA,EAAD,CAAcf,UAAU,oBCjCjBgB,EAnBG,SAAC,GAAiB,IAAD,EAAdC,EAAc,EAAdA,QACnB,OAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBpB,QAAS,EAE/B,qBACEqB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJrB,UAAU,gBACVW,MAAO,CAAEW,MAAO,WAMpB,qBAAKtB,UAAU,UAAUW,MAAO,CAAEW,MAAO,QAASC,YAAa,OAAQC,MAAO,QAASC,gBAAiB,WAAxG,SACGR,EAAQrB,QCeA8B,EA7BM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaV,EAAc,EAAdA,QAC7BW,GAAwBD,GAAeA,EAAYE,OAAOC,WAAab,EAAQY,OAAOC,SAE5F,OACE,sBAAK9B,UAAU,cAAf,UACG4B,GACC,qBACE5B,UAAU,iBACVW,MAAO,CAAEoB,gBAAgB,OAAD,OAASd,EAAQY,OAAOG,OAAxB,QAG3Bf,EAAQC,aAAeD,EAAQC,YAAYpB,OAAS,EAEjD,qBACEqB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJrB,UAAU,gBACVW,MAAO,CAAEsB,WAAYL,EAAuB,MAAQ,UAItD,qBAAK5B,UAAU,UAAUW,MAAO,CAAEW,MAAO,OAAQG,gBAAiB,UAAWQ,WAAYL,EAAuB,MAAQ,QAAxH,SACGX,EAAQrB,WC4CNsC,EA9DE,SAAC/C,GAChB,IAAQgD,EAA0ChD,EAA1CgD,MAAOC,EAAmCjD,EAAnCiD,WAAYC,EAAuBlD,EAAvBkD,SAAUC,EAAanD,EAAbmD,SAE/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAqB,SAACvB,EAASwB,GAAkBF,EAAKG,OAAOC,KAAI,SAACC,EAAQC,GAAT,OAAmBD,EAAOE,YAAc7B,EAAQP,IACrH,qBAEEV,UAAU,eACVW,MAAO,CACLW,MAAOmB,EAAc,QAAU,OAC/BV,gBAAgB,OAAD,OAASa,EAAOA,OAAOZ,OAAvB,OALnB,eACea,QAUXE,EAAiB,WACrB,IAAMC,EAAOC,OAAOD,KAAKV,GAEzB,OAAOU,EAAKL,KAAI,SAACO,EAAKL,GACpB,IAAM5B,EAAUqB,EAASY,GACnBC,EAA2B,IAAVN,EAAc,KAAOG,EAAKH,EAAQ,GACnDJ,EAAcJ,IAAapB,EAAQY,OAAOC,SAEhD,OACE,sBAA0BnB,MAAO,CAAEyC,MAAO,QAA1C,UACE,qBAAKpD,UAAU,gBAAf,SAEIyC,EACE,cAAC,EAAD,CAAWxB,QAASA,IACpB,cAAC,EAAD,CAAcA,QAASA,EAASU,YAAaW,EAASa,OAE5D,qBAAKnD,UAAU,gBAAgBW,MAAO,CAAEY,YAAakB,EAAc,OAAS,MAAOR,WAAYQ,EAAc,MAAQ,QAArH,SACGD,EAAmBvB,EAASwB,OARjC,cAAiBI,QAiBvB,OAFAE,IAEKR,EAGH,sBAAKvC,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,gBAA6BuC,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMc,QACnC,qBAAKrD,UAAU,gBAAf,SACGuC,EAAKG,OAAOC,KAAI,SAACC,GAAD,iBAAgBA,EAAOA,OAAOd,kBAGlDiB,IACD,qBAAKpC,MAAO,CAAE2C,OAAQ,WACtB,qBAAKtD,UAAU,yBAAf,SACE,cAAC,EAAD,2BAAiBb,GAAjB,IAAwBI,OAAQ6C,UAbpB,yB,2CCGLmB,EA7CG,WAChB,MAAgCnE,mBAAS,IAAzC,mBAAO0C,EAAP,KAAiB0B,EAAjB,KACA,EAAgCpE,mBAAS,IAAzC,mBAAOqE,EAAP,KAAiBC,EAAjB,KACA,EAA0BtE,mBAAS,IAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KAEMnE,EAAY,uCAAG,WAAOoE,GAAP,eAAAC,EAAA,6DACnBD,EAAElE,iBAEIoE,EAAc,CAAE,aAAc,uCAAwC,YAAajC,EAAU,cAAe2B,GAH/F,kBAMXO,IAAMC,IAAI,kCAAmC,CAAEC,QAASH,IAN7C,OAQjBI,aAAaC,QAAQ,WAAYtC,GACjCqC,aAAaC,QAAQ,WAAYX,GAGjCY,OAAOC,SAASC,SAZC,kDAejBX,EAAS,gCAfQ,0DAAH,sDAoBlB,OACE,qBAAK5D,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,uBAAMC,SAAUR,EAAhB,UACE,uBAAOe,KAAK,OAAOnB,MAAOyC,EAAU3B,SAAU,SAAC0D,GAAD,OAAOL,EAAYK,EAAEzD,OAAOf,QAAQW,UAAU,QAAQE,YAAY,WAAWsE,UAAQ,IACnI,uBAAOhE,KAAK,WAAWnB,MAAOoE,EAAUtD,SAAU,SAAC0D,GAAD,OAAOH,EAAYG,EAAEzD,OAAOf,QAAQW,UAAU,QAAQE,YAAY,WAAWsE,UAAQ,IACvI,qBAAKC,MAAM,SAAX,SACE,wBAAQjE,KAAK,SAASR,UAAU,SAAhC,SACE,yDAIN,6BAAK2D,UCtBIe,G,OAfL,WACV,OAAKP,aAAaQ,QAAQ,YAGtB,cAAC,IAAD,CACErB,OAAO,QACPsB,UAAU,uCACVvC,SAAU8B,aAAaQ,QAAQ,YAC/BE,WAAYV,aAAaQ,QAAQ,YACjCG,eAAgB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAcA,KAChDC,aAAc,kBAAM,IAAIC,MAAM,yDAAyDC,UAT/C,cAAC,EAAD,MCFhDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c2661063.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\nimport { sendMessage, isTyping } from 'react-chat-engine';\n\nconst MessageForm = (props) => {\n  const [value, setValue] = useState('');\n  const { chatId, creds } = props;\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\n    isTyping(props, chatId);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n\n    setValue('');\n  };\n\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\n  };\n  \n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n    <input\n      className=\"message-input\"\n      placeholder=\"Send a message...\"\n      value={value}\n      onChange={handleChange}\n      onSubmit={handleSubmit}\n    />\n  <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: 'none' }}\n        onChange={handleUpload.bind(this)}\n      />\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n    </form>\n);\n};\n\nexport default MessageForm;\n","const MyMessage = ({ message }) => {\n  if (message?.attachments?.length > 0) {\n    return (\n      <img\n        src={message.attachments[0].file}\n        alt=\"message-attachment\"\n        className=\"message-image\"\n        style={{ float: 'right' }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\n      {message.text}\n    </div>\n  );\n};\n\nexport default MyMessage;\n","const TheirMessage = ({ lastMessage, message }) => {\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\n\n  return (\n    <div className=\"message-row\">\n      {isFirstMessageByUser && (\n        <div\n          className=\"message-avatar\"\n          style={{ backgroundImage: `url(${message.sender.avatar})` }}\n        />\n      )}\n      {message.attachments && message.attachments.length > 0\n        ? (\n          <img\n            src={message.attachments[0].file}\n            alt=\"message-attachment\"\n            className=\"message-image\"\n            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\n          />\n        )\n        : (\n          <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\n            {message.text}\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default TheirMessage;\n","import MessageForm from './MessageForm';\nimport MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\n\nconst ChatFeed = (props) => {\n  const { chats, activeChat, userName, messages } = props;\n \n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) => { chat.people.map((person, index) => person.last_read === message.id && (\n    <div\n      key={`read_${index}`}\n      className=\"read-receipt\"\n      style={{\n        float: isMyMessage ? 'right' : 'left',\n        backgroundImage: `url(${person.person.avatar})`,\n      }}\n    />\n  ));\n    }\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n    \n      return (\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\n          <div className=\"message-block\">\n            {\n              isMyMessage\n              ? <MyMessage message={message} />\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\n          </div>\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\n            {renderReadReceipts(message, isMyMessage)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  renderMessages()\n\n  if (!chat) return <div />;\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat?.title}</div>\n        <div className=\"chat-subtitle\">\n          {chat.people.map((person) => ` ${person.person.username}`)}\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: '100px' }} />\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  );\n};\n \nexport default ChatFeed;\n\n","import { useState } from 'react';\nimport axios from 'axios';\n\nconst projectID = '1b7801d6-8a66-4be4-a442-89219d833dfc';\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const authObject =  { 'Project-ID': \"8561887d-31dc-4b57-98d6-34316bbbf81b\", 'User-Name': username, 'User-Secret': password };\n \n    try {\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\n\n      localStorage.setItem('username', username);\n      localStorage.setItem('password', password);\n  \n      //reload page\n      window.location.reload();\n    \n    } catch (err) {\n      setError('Oops, incorrect credentials.');\n    }\n  };\n\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"form\">\n        <h1 className=\"title\">Chat Application</h1>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\n          <div align=\"center\">\n            <button type=\"submit\" className=\"button\">\n              <span>Start chatting</span>\n            </button>\n          </div>\n        </form>\n        <h1>{error}</h1>\n      </div>\n    </div>\n\n  );\n};\n\nexport default LoginForm;\n","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  if (!localStorage.getItem('username')) return <LoginForm />;\r\n\r\n    return (\r\n      <ChatEngine\r\n        height=\"100vh\"\r\n        projectID=\"8561887d-31dc-4b57-98d6-34316bbbf81b\"\r\n        userName={localStorage.getItem('username')}\r\n        userSecret={localStorage.getItem('password')}\r\n        renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n        onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n      />\r\n    );\r\n  };\r\n\r\n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}